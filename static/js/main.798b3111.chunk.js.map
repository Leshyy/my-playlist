{"version":3,"sources":["cmps/VideoPreview.jsx","cmps/VideoList.jsx","cmps/EmbeddedVideo.jsx","Service/videoService.js","App.js","reportWebVitals.js","index.js"],"names":["VideoPreview","video","setCurrVideo","className","src","snippet","thumbnails","default","url","title","description","onClick","VideoList","videos","map","id","videoId","EmbeddedVideo","opts","height","width","playerVars","autoplay","onReady","event","target","pauseVideo","videoService","query","keyword","a","axios","get","res","data","App","useState","setKeyword","setVideo","setVideos","useEffect","loadVideos","videoList","length","ev","preventDefault","results","items","onSubmit","type","value","placeholder","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAEO,SAASA,EAAT,GAAgD,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,aAClC,OACI,sBAAKC,UAAU,qBAAf,UACI,qBAAKA,UAAU,YAAYC,IAAKH,EAAMI,QAAQC,WAAWC,QAAQC,MACjE,sBAAKL,UAAU,4BAAf,UACI,6BAAKF,EAAMI,QAAQI,QACnB,4BAAIR,EAAMI,QAAQK,iBAGtB,wBAAQC,QAAS,WACbT,EAAaD,IADjB,qBCRL,SAASW,EAAT,GAA8C,IAAzBC,EAAwB,EAAxBA,OAAQX,EAAgB,EAAhBA,aAGhC,OACI,8BACKW,EAAOC,KAAI,SAAAb,GACR,OAAO,cAACD,EAAD,CAAqCC,MAAOA,EAAOC,aAAcA,GAA9CD,EAAMc,GAAGC,c,YCN5C,SAASC,EAAT,GAAmC,IAAVhB,EAAS,EAATA,MAa5B,OAAKA,EAGD,gCACI,cAAC,IAAD,CAASe,QAASf,EAAMc,GAAGC,QAASE,KAf/B,CACTC,OAAQ,MACRC,MAAO,MACPC,WAAY,CACRC,SAAU,IAWsCC,QAPvC,SAACC,GACdA,EAAMC,OAAOC,gBAOT,6BAAKzB,EAAMI,QAAQI,WALR,4C,qBCdVkB,EAAe,CACxBC,M,yFAGJ,WAAqBC,GAArB,iBAAAC,EAAA,sEACsBC,IAAMC,IAAN,mGAAsGH,EAAtG,iDADtB,cACUI,EADV,OAEUpB,EAASoB,EAAIC,KAFvB,kBAGWrB,GAHX,4C,sBCqCesB,MArCf,WAAgB,IAAD,EACiBC,mBAAS,WAD1B,mBACNP,EADM,KACGQ,EADH,OAEaD,mBAAS,IAFtB,mBAENnC,EAFM,KAECqC,EAFD,KAGPpC,EAAe,SAACD,GACpBqC,EAASrC,IAJE,EAOemC,mBAAS,IAPxB,mBAONvB,EAPM,KAOE0B,EAPF,KAQbC,oBAAS,sBAAC,4BAAAV,EAAA,sEACgBW,IADhB,QACFC,EADE,QAEMC,QAAQzC,EAAawC,EAAU,IAFrC,2CAGP,IAGH,IAAMD,EAAU,uCAAG,0CAAAX,EAAA,6DAAOc,EAAP,+BAAY,OACrBA,EAAGC,iBADM,SAEKlB,EAAaC,MAAMC,GAFxB,cAEXiB,EAFW,OAGjBP,EAAUO,EAAQC,OAClBV,EAAW,IAJM,kBAKVS,EAAQC,OALE,2CAAH,qDAQhB,OACE,sBAAK5C,UAAU,MAAf,UACE,oDACA,uBAAM6C,SAAU,SAACJ,GAAD,OAAQH,EAAWG,IAAnC,UACE,uBAAOK,KAAK,SAASC,MAAOrB,EAASsB,YAAY,SAASC,SAAU,SAACR,GAAD,OAAQP,EAAWO,EAAGnB,OAAOyB,UACjG,+CAEF,sBAAK/C,UAAU,OAAf,UACE,cAACS,EAAD,CAAWC,OAAQA,EAAQX,aAAcA,IACzC,cAACe,EAAD,CAAehB,MAAOA,WCzBfoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.798b3111.chunk.js","sourcesContent":["import React from 'react'\n\nexport function VideoPreview({ video, setCurrVideo }) {\n    return (\n        <div className=\"video-preview flex\">\n            <img className=\"video-img\" src={video.snippet.thumbnails.default.url} />\n            <div className=\"video-content flex column\">\n                <h4>{video.snippet.title}</h4>\n                <p>{video.snippet.description}</p>\n\n            </div>\n            <button onClick={() => {\n                setCurrVideo(video)\n            }\n            } >Play</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport { VideoPreview } from './VideoPreview';\n\nexport function VideoList({ videos, setCurrVideo }) {\n\n\n    return (\n        <div>\n            {videos.map(video => {\n                return <VideoPreview key={video.id.videoId} video={video} setCurrVideo={setCurrVideo} />\n            })}\n        </div>\n    )\n}\n","import React from 'react'\nimport YouTube from 'react-youtube';\n\nexport function EmbeddedVideo({ video }) {\n\n    const opts = {\n        height: '290',\n        width: '440',\n        playerVars: {\n            autoplay: 1,\n        },\n    }\n\n    const _onReady = (event) => {\n        event.target.pauseVideo();\n    }\n    if (!video) return <div>Loading..</div>\n    return (\n\n        <div>\n            <YouTube videoId={video.id.videoId} opts={opts} onReady={_onReady} />\n            <h1>{video.snippet.title}</h1>\n        </div >\n\n    )\n}\n","import axios from \"axios\";\n\nexport const videoService = {\n    query,\n}\n\nasync function query(keyword) {\n    const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyA9krZ02aDNloGSkQmiwb-2XLuChoMHJh4`);\n    const videos = res.data;\n    return videos;\n}\n\n","import './App.css';\nimport { VideoList } from './cmps/VideoList';\nimport { EmbeddedVideo } from './cmps/EmbeddedVideo';\nimport { videoService } from './Service/videoService.js'\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [keyword, setKeyword] = useState('Angular')\n  const [video, setVideo] = useState('')\n  const setCurrVideo = (video) => {\n    setVideo(video)\n  }\n\n  const [videos, setVideos] = useState([])\n  useEffect(async () => {\n    const videoList = await loadVideos()\n    if (videoList.length) setCurrVideo(videoList[0])\n  }, [])\n\n\n  const loadVideos = async (ev = null) => {\n    if (ev) ev.preventDefault();\n    const results = await videoService.query(keyword)\n    setVideos(results.items)\n    setKeyword('')\n    return results.items\n  }\n\n  return (\n    <div className=\"App\">\n      <header>Youtube player</header>\n      <form onSubmit={(ev) => loadVideos(ev)}>\n        <input type=\"search\" value={keyword} placeholder=\"Search\" onChange={(ev) => setKeyword(ev.target.value)} />\n        <button>Search</button>\n      </form>\n      <div className=\"flex\">\n        <VideoList videos={videos} setCurrVideo={setCurrVideo} />\n        <EmbeddedVideo video={video} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.scss'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}