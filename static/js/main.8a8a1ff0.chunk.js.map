{"version":3,"sources":["cmps/VideoPreview.jsx","cmps/VideoList.jsx","cmps/VideoPlayer.jsx","Service/storageService.js","Service/videoService.js","pages/VideoApp.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["VideoPreview","video","setCurrVideo","className","src","snippet","thumbnails","medium","url","title","description","onClick","VideoList","videos","map","id","videoId","VideoPlayer","opts","height","width","playerVars","autoplay","onReady","event","target","pauseVideo","storageService","loadFromStorage","key","json","localStorage","getItem","JSON","parse","saveToStorage","value","stringify","setItem","VIDEOS_KEY","KEYWORD_KEY","videoService","query","keyword","a","storageKeyword","axios","get","res","data","items","VideoApp","useState","setKeyword","setVideo","setVideos","useEffect","loadVideos","videoList","length","ev","preventDefault","onSubmit","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a8a1ff0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function VideoPreview({ video, setCurrVideo }) {\r\n    return (\r\n        <div className=\"video-preview flex\">\r\n            <img className=\"video-img\" src={video.snippet.thumbnails.medium.url} />\r\n            <div className=\"video-content flex column\">\r\n                <h4>{video.snippet.title}</h4>\r\n                <p>{video.snippet.description}</p>\r\n\r\n            </div>\r\n            <button onClick={() => {\r\n                setCurrVideo(video)\r\n            }\r\n            } >Play</button>\r\n        </div>\r\n    )\r\n}\r\n","import { VideoPreview } from './VideoPreview';\r\n\r\nexport function VideoList({ videos, setCurrVideo }) {\r\n    return (\r\n        <div className=\"video-list\">\r\n            {videos.map(video => {\r\n                return <VideoPreview key={video.id.videoId} video={video} setCurrVideo={setCurrVideo} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import YouTube from 'react-youtube';\r\n\r\nexport function VideoPlayer({ video }) {\r\n\r\n    const opts = {\r\n        height: '600px',\r\n        width: '100%',\r\n        playerVars: {\r\n            autoplay: 1,\r\n        },\r\n    }\r\n\r\n    const _onReady = (event) => {\r\n        event.target.pauseVideo();\r\n    }\r\n    if (!video) return <div>Loading..</div>\r\n    return (\r\n\r\n        <div>\r\n            <YouTube videoId={video.id.videoId} opts={opts} onReady={_onReady} />\r\n            <h1>{video.snippet.title}</h1>\r\n        </div >\r\n\r\n    )\r\n}\r\n","'use strict';\r\nexport const storageService = {\r\n    loadFromStorage,\r\n    saveToStorage\r\n}\r\nfunction loadFromStorage(key) {\r\n    var json = localStorage.getItem(key)\r\n    var value = JSON.parse(json)\r\n    return value;\r\n}\r\nfunction saveToStorage(key, value) {\r\n    var json = JSON.stringify(value);\r\n    localStorage.setItem(key, json)\r\n}\r\n","import axios from \"axios\";\r\nimport { storageService } from './storageService.js'\r\n\r\nconst VIDEOS_KEY = 'video'\r\nconst KEYWORD_KEY = 'keyword'\r\n\r\nexport const videoService = {\r\n    query,\r\n}\r\n\r\nasync function query(keyword) {\r\n    var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY)\r\n    if (keyword === '' && !storageKeyword) keyword = 'Angular'\r\n\r\n    if (keyword === storageKeyword || keyword === '') {\r\n        return storageService.loadFromStorage(VIDEOS_KEY)\r\n    }\r\n\r\n    const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyA9krZ02aDNloGSkQmiwb-2XLuChoMHJh4`);\r\n    const videos = res.data.items;\r\n    storageService.saveToStorage(VIDEOS_KEY, videos)\r\n    storageService.saveToStorage(KEYWORD_KEY, keyword)\r\n    return videos;\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { VideoList } from \"../cmps/VideoList\"\r\nimport { VideoPlayer } from \"../cmps/VideoPlayer\"\r\nimport { videoService } from \"../Service/videoService\"\r\n\r\nexport function VideoApp() {\r\n    const [keyword, setKeyword] = useState('')\r\n    const [video, setVideo] = useState(null)\r\n    const [videos, setVideos] = useState([])\r\n\r\n\r\n    useEffect(async () => {\r\n        const videoList = await loadVideos()\r\n        if (videoList.length) setVideo(videoList[0])\r\n    }, [])\r\n\r\n    const setCurrVideo = (video) => {\r\n        setVideo(video)\r\n    }\r\n\r\n    const loadVideos = async (ev = null) => {\r\n        if (ev) ev.preventDefault();\r\n        const videos = await videoService.query(keyword);\r\n        setVideos(videos)\r\n        setKeyword('')\r\n        return videos;\r\n    }\r\n\r\n    // if (!video) return <div>Loading...</div>\r\n    return (\r\n        <section className=\"video-app\">\r\n            <form onSubmit={(ev) => loadVideos(ev)}>\r\n                <input value={keyword} placeholder=\"Search\" onChange={(ev) => setKeyword(ev.target.value)} />\r\n                <button>Search</button>\r\n            </form>\r\n            <div className=\"flex\">\r\n                <VideoList videos={videos} setCurrVideo={setCurrVideo} />\r\n                <VideoPlayer video={video} />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import { VideoApp } from './pages/VideoApp';\r\n\r\nexport function App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <VideoApp />\r\n    </div>\r\n  );\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/main.scss'\r\nimport { App } from './App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}